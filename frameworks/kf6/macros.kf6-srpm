%maj_ver_kf6 %(echo %{version} | cut -d. -f1)
%min_ver_kf6 %(echo %{version} | cut -d. -f2)
%bug_ver_kf6 %(echo %{version} | cut -d. -f3 | sed 's/[\\^~].*//')

%stable_kf6 %( \
    if test %bug_ver_kf6 -ge 50 ; then
        echo "unstable"
    else
        echo "stable"
    fi
    )

%majmin_ver_kf6 %( \
    if [[ "%version" =~ (~|\\^) ]]; then
        echo %{maj_ver_kf6}.%{min_ver_kf6}.%{bug_ver_kf6}${BASH_REMATCH}
    elif test %bug_ver_kf6 -ge 50 ; then
        echo %{maj_ver_kf6}.%{min_ver_kf6}.%{bug_ver_kf6}
    else
        echo %{maj_ver_kf6}.%{min_ver_kf6}
    fi
    )

%version_no_git %{lua:
  print((macros.version:gsub('[%^~].*', '')))
}

%kde_name2name_with_namespace %{lua:
    local pkgname = macros.base_name or macros.name
    local kde = require "fedora.srpm.kde"
    print(kde.name2name_with_namespace(pkgname))
}

%frameworks_meta(v:p) %{lua:
    macros.basever = (rpm.expand("%{-v}") ~= "") and rpm.expand("%{-v*}") or macros.majmin_ver_kf6
    macros._kf6_build_qch = "1"
    if macros.bumpver or macros.gitdate then
        local fedora = require "fedora.common"
        fedora.zalias({"commit","shortcommit"}, false)
        print(rpm.expand("Source0: https://invent.kde.org/frameworks/%{framework}/-/archive/%{commit}/%{framework}-%{shortcommit}.tar.gz\\n"))
        macros.sourcerootdir = rpm.expand("%{framework}-%{commit}")
    else
        print(rpm.expand("Source0: https://download.kde.org/%{stable_kf6}/frameworks/%{basever}/"..((opt.p == "") and "portingAids/" or "").."%{framework}-%{version}.tar.xz\\n" ..
                         "Source1: https://download.kde.org/%{stable_kf6}/frameworks/%{basever}/"..((opt.p == "") and "portingAids/" or "").."%{framework}-%{version}.tar.xz.sig\\n" ..
                         "Source2: kde-frameworks-signing-keys.pgp\\n"))
        macros.sourcerootdir = rpm.expand("%{framework}-%{version}")
    end

    if macros._kf6_build_qch == "1" then
        print("BuildRequires: doxygen qt6-doc-devel\\n")
    end

}

%plasma_source(v:) %{lua:
    macros.basever = (rpm.expand("%{-v}") ~= "") and rpm.expand("%{-v*}") or macros.version_no_git
    local pkgname = macros.base_name or macros.name
    if macros.bumpver or macros.gitdate then
        local fedora = require "fedora.common"
        fedora.zalias({"commit","shortcommit"}, false)
        print(rpm.expand("Source0: https://invent.kde.org/plasma/"..pkgname.."/-/archive/%{commit}/"..pkgname.."-%{shortcommit}.tar.gz\\n"))
        macros.sourcerootdir = rpm.expand(pkgname.."-%{commit}")
    else
        print(rpm.expand("Source0: https://download.kde.org/%{stable_kf6}/plasma/%{basever}/"..pkgname.."-%{version}.tar.xz\\n" ..
                         "Source1: https://download.kde.org/%{stable_kf6}/plasma/%{basever}/"..pkgname.."-%{version}.tar.xz.sig\\n" ..
                         "Source2: kde-plasma-signing-keys.pgp\\n"))
        macros.sourcerootdir = rpm.expand(pkgname.."-%{version}")
    end
}

%apps_source(v:) %{lua:
    macros.basever = (rpm.expand("%{-v}") ~= "") and rpm.expand("%{-v*}") or macros.version_no_git
    local pkgname = macros.base_name or macros.name
    if macros.bumpver or macros.gitdate then
        local fedora = require "fedora.common"
        fedora.zalias({"commit","shortcommit"}, false)
        print(rpm.expand("Source0: https://invent.kde.org/%{kde_name2name_with_namespace}/-/archive/%{commit}/"..pkgname.."-%{shortcommit}.tar.gz\\n"))
        macros.sourcerootdir = rpm.expand(pkgname.."-%{commit}")
    else
        print(rpm.expand("Source0: https://download.kde.org/%{stable_kf6}/release-service/%{basever}/src/"..pkgname.."-%{version}.tar.xz\\n" ..
                         "Source1: https://download.kde.org/%{stable_kf6}/release-service/%{basever}/src/"..pkgname.."-%{version}.tar.xz.sig\\n" ..
                         "Source2: kde-gear-signing-keys.pgp\\n"))
        macros.sourcerootdir = rpm.expand(pkgname.."-%{version}")
    end
}


%qch_package() \
%package %{?1:%{1}-}doc\
Summary: Developer Documentation files for %{name}\
%{?framework:Supplements: kf6-qch}\
%description %{?1:%{1}-}doc\
Developer Documentation files for %{name} for use with KDevelop or QtCreator.\
%files %{?1:%{1}-}doc\
%{_qt6_docdir}/*.qch
